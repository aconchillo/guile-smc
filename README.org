* Guile-SMC

GNU Guile state machine compiler.

** License
    Guile-SMC is free software: you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
    Software Foundation, either version 3 of the License, or (at your option)
    any later version.  Please see =COPYING= file for the terms of GNU General
    Public License.

** Usage
   PlantUML (<http://www.plantuml.com/>) state machine compiler:
#+BEGIN_EXAMPLE scheme
  (let ((fsm (puml->fsm (current-input-port))))
    (format #t "output fsm: ~a~%" fsm)
    (format #t "transition table:~%")
    (pretty-print
     (hash-table->transition-list (fsm-transition-table fsm))
     #:display? #t)))
#+END_EXAMPLE

  State machine validation:
#+BEGIN_EXAMPLE scheme
(let ((fsm (puml->fsm (current-input-port)))
  (format #t "validation report:~%")
  (pretty-print (fsm-validate fsm)))
#+END_EXAMPLE

   Want more finite-state machines? Now you can generate a FSM from the PlantUML
   format that reads a FSM in the PlantUML format -- see
   =examples/pumlpuml.scm=.

   Also see other examples the =examples= directory.
